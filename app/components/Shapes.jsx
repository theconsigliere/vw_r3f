/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react"
import { useGLTF } from "@react-three/drei"

export function Shape4(props) {
  const { nodes, materials } = useGLTF("./assets/shape4.glb")

  // setScalar is a function that scales the object

  // setScalar(0.5) will scale the object to half its size
  // setScalar(2) will scale the object to twice its size
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shape4.geometry}
        material={materials["Holographic.001"]}
        setScalar={0.7}
      />
    </group>
  )
}

useGLTF.preload("./assets/shape4.glb")

export function Shape3(props) {
  const { nodes, materials } = useGLTF("./assets/shape3.glb")
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Shape3.geometry}
        material={materials.Holographic3}
        rotation={[Math.PI / 2, 0, -Math.PI]}
        setScalar={0.7}
      />
    </group>
  )
}

useGLTF.preload("./assets/shape3.glb")

export function Shape2(props) {
  const { nodes, materials } = useGLTF("./assets/shape2.glb")
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shape2.geometry}
        material={materials.Holographic2}
        setScalar={0.7}
      />
    </group>
  )
}

useGLTF.preload("./assets/shape2.glb")

export function Shape1(props) {
  const { nodes, materials } = useGLTF("./assets/shape1.glb")
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.shape1.geometry}
        material={materials.Holographic}
      />
    </group>
  )
}

useGLTF.preload("./assets/shape1.glb")
